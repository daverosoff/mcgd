(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     23569,        727]
NotebookOptionsPosition[     20645,        637]
NotebookOutlinePosition[     21010,        653]
CellTagsIndexPosition[     20967,        650]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Vectors in Mathematica", "Title",
 CellFrame->{{0, 0}, {3, 0}},
 CellChangeTimes->{{3.556473262678076*^9, 3.5564732672060757`*^9}}],

Cell[TextData[{
 StyleBox["Since vectors are an essential part of math and physics, ",
  FontSize->18],
 StyleBox["Mathematica",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox[" understands them very well. You\[CloseCurlyQuote]ve seen curly \
braces {} before, used to enclose the elements of a list (for example, in a \
definite integral, to indicate the variable of integration and the limits of \
the integral). ",
  FontSize->18],
 StyleBox["Mathematica",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox[" interprets a list of numbers as a vector when it is appropriate \
to do so. As you follow along, remember to evaluate all the cells with math \
in them by putting the cursor in the cell and hitting Shift+Enter. A cell has \
been evaluated if a small In(x) := notation appears in the left margin. Most \
cells will produce output which is inserted underneath them.",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.5564732828490753`*^9, 3.5564733034440756`*^9}, {
  3.5564733393090754`*^9, 3.5564733925050755`*^9}, {3.5564738180010757`*^9, 
  3.556473819921076*^9}, {3.5606860148539534`*^9, 3.5606860696017094`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"v", ",", "w"}], "]"}]], "Input",
 CellChangeTimes->{{3.556473446690076*^9, 3.5564734486700754`*^9}}],

Cell[BoxData[{
 RowBox[{"v", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"w", ":=", 
  RowBox[{"{", 
   RowBox[{"4", ",", "5"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.5564733077000756`*^9, 3.5564733271810756`*^9}, {
  3.5564734524050756`*^9, 3.556473460461076*^9}}],

Cell[BoxData[
 RowBox[{"v", "+", "w"}]], "Input",
 CellChangeTimes->{{3.5564733313860755`*^9, 3.5564733318120756`*^9}}],

Cell[TextData[{
 StyleBox["If you multiply a number by a vector on either side, ",
  FontSize->18],
 StyleBox["Mathematica",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox[" knows you mean scalar multiplication. (You can skip the * and \
just use a space. The space is not optional.)",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.556473403400076*^9, 3.5564734226800756`*^9}, {
  3.5564735068910756`*^9, 3.5564735085680757`*^9}, {3.560686089428547*^9, 
  3.560686111494446*^9}}],

Cell[BoxData[{
 RowBox[{"3", "*", "v"}], "\[IndentingNewLine]", 
 RowBox[{"w", "*", 
  RowBox[{"-", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"-", "2"}], 
  RowBox[{"(", 
   RowBox[{"v", "+", "w"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.5564733951790757`*^9, 3.5564734332660756`*^9}, 
   3.560686118873152*^9}],

Cell[TextData[StyleBox["What if we try . . . ",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.5564735364230757`*^9, 3.5564735419050756`*^9}}],

Cell[BoxData[
 RowBox[{"v", "*", "w"}]], "Input",
 CellChangeTimes->{{3.5564735442100754`*^9, 3.5564735445330753`*^9}}],

Cell[TextData[{
 StyleBox["Be careful! Do you see what ",
  FontSize->18],
 StyleBox["Mathematica",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox[" did? This operation turns out not to be very interesting to us \
(and in fact is never referenced in the book), so be careful you don\
\[CloseCurlyQuote]t use this when you mean something else. ",
  FontSize->18],
 StyleBox["Mathematica",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox[" trusts you to know what you are doing.",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.5564735558640757`*^9, 3.556473645704076*^9}, 
   3.5606861307601995`*^9}],

Cell[BoxData[{"i", "\[IndentingNewLine]", "j"}], "Input",
 CellChangeTimes->{{3.5564736545190754`*^9, 3.5564736562200756`*^9}, {
  3.5564737130880756`*^9, 3.556473720546076*^9}}],

Cell[TextData[{
 StyleBox["Notice the color-coding in the above cell. The dark blue is the \
color of the abyss of the unknown. ",
  FontSize->18],
 StyleBox["Mathematica",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox[" doesn\[CloseCurlyQuote]t know special symbols for the standard \
unit vectors. What happens when you evaluate the cell?",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.5564737356160755`*^9, 3.5564737519230757`*^9}, {
  3.5564737903160753`*^9, 3.556473809025076*^9}, {3.560686148197611*^9, 
  3.560686173167926*^9}}],

Cell[CellGroupData[{

Cell["\<\
Plotting vector-valued functions\
\>", "Subtitle",
 CellFrame->{{0, 0}, {2, 0}},
 CellChangeTimes->{{3.5564738268700757`*^9, 3.5564738326680756`*^9}}],

Cell[TextData[StyleBox["Defining a vector-valued function is the same as any \
other function.",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.5564738426070757`*^9, 3.5564738582390757`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "r", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "[", "t_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"3", "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "*", "Pi", "*", "t"}], "]"}]}], ",", 
    RowBox[{"2", "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "*", "Pi", "*", "t"}], "]"}]}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.5564738607610755`*^9, 3.5564738844080753`*^9}, {
  3.5564739430800753`*^9, 3.5564739471670756`*^9}}],

Cell[TextData[StyleBox["Just like above, we enter the vector as a list of \
numbers (a function is just a number that varies, so a vector-valued function \
is a vector that varies) enclosed by curly braces. Remember that functions \
are always capitalized, as are special constants, and that () are ONLY for \
grouping, while [] are ONLY for function arguments.",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.5564739036090755`*^9, 3.556473927440076*^9}, {
  3.5571649589792805`*^9, 3.5571649660989923`*^9}, {3.5606861965588408`*^9, 
  3.5606862233873253`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"r", "[", "0", "]"}], "\[IndentingNewLine]", 
 RowBox[{"r", "[", 
  RowBox[{"1", "/", "4"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"r", "[", 
  RowBox[{"1", "/", "3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5564739320110755`*^9, 3.5564739671150756`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.556473937518076*^9, 3.556473967322076*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.556473937518076*^9, 3.5564739673240757`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["3", "2"]}], ",", 
   SqrtBox["3"]}], "}"}]], "Output",
 CellChangeTimes->{{3.556473937518076*^9, 3.5564739673270755`*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox[" won\[CloseCurlyQuote]t always complain if you try to feed a \
function the wrong kind of argument (remember \[OpenCurlyDoubleQuote]argument\
\[CloseCurlyDoubleQuote] means \[OpenCurlyDoubleQuote]input\
\[CloseCurlyDoubleQuote]).",
  FontSize->18],
 StyleBox[" ",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox["Before you evaluate the next cell, try to guess what ",
  FontSize->18],
 StyleBox["Mathematica",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox[" might give you as a result.",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.5564739793070755`*^9, 3.5564740482970753`*^9}}],

Cell[BoxData[
 RowBox[{"r", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"5", "/", "6"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.5564739747660756`*^9, 3.5564740062650757`*^9}, {
  3.5564740701220756`*^9, 3.5564740720750756`*^9}}],

Cell[TextData[StyleBox["What\[CloseCurlyQuote]s going on here? Evaluate the \
next cell for a hint.",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.556474018737076*^9, 3.5564740564360757`*^9}}],

Cell[BoxData[{
 RowBox[{"r", "[", 
  RowBox[{"3", "/", "4"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"r", "[", 
  RowBox[{"5", "/", "6"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5564738996370754`*^9, 3.5564739005330753`*^9}, {
  3.5564740586850758`*^9, 3.556474076999076*^9}}],

Cell[TextData[{
 StyleBox["There\[CloseCurlyQuote]s not a super-short way to describe what ",
  FontSize->18],
 StyleBox["Mathematica",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox[" is doing, but it\[CloseCurlyQuote]s clear it\[CloseCurlyQuote]s \
combining the answers into lists somehow. The process turns out not to be of \
much mathematical interest, at least not to us. Again, ",
  FontSize->18],
 StyleBox["Mathematica",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox[" trusts you; it\[CloseCurlyQuote]s up to you to make sure you only \
feed your functions nourishing materials. ",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.556474092275076*^9, 3.5564741361210756`*^9}, {
  3.560686247459079*^9, 3.560686289393819*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"v", ",", "w"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"v", ":=", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"w", ":=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.5564747872000756`*^9, 3.5564748253040757`*^9}}],

Cell[TextData[StyleBox["We can access the entries of these vectors using \
square brackets (similarly to an array in C and many other programming \
languages).",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.5571650679841795`*^9, 3.55716508729011*^9}, {
  3.5571652619345727`*^9, 3.557165263957775*^9}}],

Cell[BoxData[
 RowBox[{"v", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.557165214940874*^9, 3.5571652165180316`*^9}, {
  3.5571652667730565`*^9, 3.557165267835163*^9}}],

Cell[TextData[{
 StyleBox["We usually refer to a vector\[CloseCurlyQuote]s magnitude as its \
length, but to ",
  FontSize->16],
 StyleBox["Mathematica",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[", a vector\[CloseCurlyQuote]s length is its length as a list\
\[LongDash]that is, the number of entries in the vector.",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.5571650176881504`*^9, 3.557165051163498*^9}, {
  3.560685970695363*^9, 3.5606859792960324`*^9}}],

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{"12389471094857230958", ",", " ", 
    RowBox[{"-", "1234983475902834"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.5564748054440756`*^9, 3.556474809617076*^9}, {
  3.5606859844298673`*^9, 3.5606859946630735`*^9}}],

Cell[TextData[{
 StyleBox["To ask for the length as we know it (the magnitude of the vector)\
\.1f, we have to use the word mathematicians use for this concept: the ",
  FontSize->16],
 StyleBox["norm",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" of the vector. (A lot of people say ",
  FontSize->16],
 StyleBox["magnitude",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" as well, but that command is not implemented as a Mathematica \
built-in function.)",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.557165289851364*^9, 3.5571653136647453`*^9}, {
  3.56068633213151*^9, 3.560686372905422*^9}}],

Cell[BoxData[
 RowBox[{"Norm", "[", "v", "]"}]], "Input",
 CellChangeTimes->{{3.5564748285920753`*^9, 3.5564748417410755`*^9}}],

Cell[TextData[StyleBox["We can check that this is really what we want. ",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.5571653251088896`*^9, 3.5571653373611145`*^9}, 
   3.5606863253353853`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "]"}], " ", "\[Equal]", 
  " ", 
  RowBox[{"Norm", "[", "v", "]"}]}]], "Input",
 CellChangeTimes->{{3.55716534081246*^9, 3.5571653622626047`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.5571653504254208`*^9, 3.557165363060684*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["This is how to test for equality in ",
  FontSize->16],
 StyleBox["Mathematica.",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" Notice the operator is a double-equals sign ==, not a single \
equals. Like many other languages, ",
  FontSize->16],
 StyleBox["Mathematica",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" reserves the single equals for ",
  FontSize->16],
 StyleBox["assignment,",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" the action of binding a value to a variable. ",
  FontSize->16],
 StyleBox["Mathematica",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" evaluates both sides of the == expression and compares them.",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.5571654438147593`*^9, 3.557165496620039*^9}, 
   3.560685959787744*^9}],

Cell[BoxData[
 RowBox[{"0", "\[Equal]", "1"}]], "Input",
 CellChangeTimes->{{3.557165498789256*^9, 3.5571654997933564`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", "1"}], "\[Equal]", "2"}]], "Input",
 CellChangeTimes->{{3.5571655021355906`*^9, 3.557165503140691*^9}}],

Cell[TextData[{
 StyleBox["The special constants ",
  FontSize->18],
 StyleBox["e",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox[", ",
  FontSize->18],
 StyleBox["i",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox[", and \[Pi] can be entered with correct capitalization. Recall \
that the N function returns decimal approximations.",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.5606864011214943`*^9, 3.560686428286092*^9}}],

Cell[BoxData[
 RowBox[{"N", "[", "E", "]"}]], "Input",
 CellChangeTimes->{{3.560686430938074*^9, 3.560686432503871*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"I", "^", "2"}], " ", "\[Equal]", " ", 
  RowBox[{"-", "1"}]}]], "Input",
 CellChangeTimes->{{3.557165515172894*^9, 3.557165517102087*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{"I", "*", "Pi"}], "]"}], "\[Equal]", 
  RowBox[{"-", "1"}]}]], "Input",
 CellChangeTimes->{{3.5571655040997868`*^9, 3.557165509540331*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dot and Cross Products", "Subtitle",
 CellFrame->{{0, 0}, {2, 0}},
 CellChangeTimes->{{3.557165565724949*^9, 3.5571655691232886`*^9}}],

Cell[TextData[{
 StyleBox["Both kinds of products are easy in ",
  FontSize->16],
 StyleBox["Mathematica",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[".",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.5571655780121775`*^9, 3.5571655876041365`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"v", ",", "w"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"v", ":=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "4"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"w", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "2"}], ",", "6", ",", 
    RowBox[{"-", "2"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.5571655902794037`*^9, 3.557165603813757*^9}}],

Cell[TextData[StyleBox["First, let\[CloseCurlyQuote]s find the dot product \
\[OpenCurlyDoubleQuote]by hand\[CloseCurlyDoubleQuote].",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.5571656215675325`*^9, 3.5571656354699225`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", 
   RowBox[{"w", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", " ", 
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"[", "2", "]"}], "]"}], " ", 
   RowBox[{"w", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], " ", "+", " ", 
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"[", "3", "]"}], "]"}], " ", 
   RowBox[{"w", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5571656381171875`*^9, 3.5571656562630014`*^9}}],

Cell[TextData[StyleBox["We can also use the Sum command (notice that the \
second argument is a list specifying the range of k).",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.5606857938982706`*^9, 3.5606858071280055`*^9}, {
  3.560685939125491*^9, 3.560685953157999*^9}}],

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"[", "k", "]"}], "]"}], " ", 
    RowBox[{"w", "[", 
     RowBox[{"[", "k", "]"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"k", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.557165665906966*^9, 3.5571656765160265`*^9}}],

Cell[TextData[StyleBox["The Sum command is equivalent to the following, built \
using the Advanced tab of the Basic Math Assistant palette (in the Palettes \
menu).",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.5606858112710056`*^9, 3.56068587054527*^9}, {
  3.5606859028672266`*^9, 3.5606859096997643`*^9}}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "1"}], "3"], 
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"[", "k", "]"}], "]"}], " ", 
   RowBox[{"w", "[", 
    RowBox[{"[", "k", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5606859150659575`*^9, 3.560685925990796*^9}}],

Cell[TextData[StyleBox["Unsurprisingly, there is a built-in command to \
accomplish this, without \[OpenCurlyDoubleQuote]taking apart\
\[CloseCurlyDoubleQuote] the vectors as above.",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.5571661227096415`*^9, 3.557166131412512*^9}, {
  3.560685880560085*^9, 3.560685896877057*^9}}],

Cell[BoxData[
 RowBox[{"Dot", "[", 
  RowBox[{"v", ",", "w"}], "]"}]], "Input",
 CellChangeTimes->{{3.557166115318903*^9, 3.557166116920063*^9}}],

Cell[TextData[StyleBox["An even shorter way:",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.557166140346405*^9, 3.557166143054676*^9}}],

Cell[BoxData[
 RowBox[{"v", ".", "w"}]], "Input",
 CellChangeTimes->{{3.5571661358239527`*^9, 3.5571661360139723`*^9}}],

Cell[TextData[{
 StyleBox["The following is a nonsensical calculation for ",
  FontSize->16],
 StyleBox["vectors",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[", but it makes perfect sense for lists:",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.55716615870024*^9, 3.557166172008571*^9}, {
  3.560686476612201*^9, 3.5606864795449824`*^9}}],

Cell[BoxData[
 RowBox[{"v", "*", "w"}]], "Input",
 CellChangeTimes->{{3.557166146968067*^9, 3.557166147309101*^9}}],

Cell[TextData[{
 StyleBox["It is up to you to remember how to invoke the command you want. ",
  FontSize->16],
 StyleBox["Mathematica",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" assumes you know what you are up to. There\[CloseCurlyQuote]s \
only one way to get cross products that I know of:",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.5571661772941*^9, 3.557166204467817*^9}}],

Cell[BoxData[
 RowBox[{"Cross", "[", 
  RowBox[{"v", ",", "w"}], "]"}]], "Input",
 CellChangeTimes->{{3.557166206378008*^9, 3.5571662113185015`*^9}}],

Cell[BoxData[
 RowBox[{"v", ".", 
  RowBox[{"Cross", "[", 
   RowBox[{"v", ",", "w"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5571662149248624`*^9, 3.557166217610131*^9}}],

Cell[BoxData[
 RowBox[{"w", ".", 
  RowBox[{"Cross", "[", 
   RowBox[{"v", ",", "w"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.557166218821252*^9, 3.557166222472617*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cross", "[", 
   RowBox[{"w", ",", "v"}], "]"}], "\[Equal]", 
  RowBox[{"-", 
   RowBox[{"Cross", "[", 
    RowBox[{"v", ",", "w"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5571662246728373`*^9, 3.5571662302133913`*^9}}],

Cell[TextData[StyleBox["It doesn\[CloseCurlyQuote]t matter whether the \
vectors are variables or constants.",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.5571663919955673`*^9, 3.5571664044958177`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cross", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b1", ",", "b2", ",", "b3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5571664060499725`*^9, 3.557166419845352*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "a3"}], " ", "b2"}], "+", 
    RowBox[{"a2", " ", "b3"}]}], ",", 
   RowBox[{
    RowBox[{"a3", " ", "b1"}], "-", 
    RowBox[{"a1", " ", "b3"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "a2"}], " ", "b1"}], "+", 
    RowBox[{"a1", " ", "b2"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.557166420900458*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 633},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 137, 2, 94, "Title"],
Cell[719, 26, 1132, 23, 103, "Text"],
Cell[1854, 51, 149, 3, 31, "Input"],
Cell[2006, 56, 323, 8, 52, "Input"],
Cell[2332, 66, 119, 2, 31, "Input"],
Cell[2454, 70, 486, 12, 57, "Text"],
Cell[2943, 84, 325, 9, 72, "Input"],
Cell[3271, 95, 142, 2, 34, "Text"],
Cell[3416, 99, 119, 2, 31, "Input"],
Cell[3538, 103, 607, 17, 57, "Text"],
Cell[4148, 122, 178, 2, 52, "Input"],
Cell[4329, 126, 544, 13, 57, "Text"],
Cell[CellGroupData[{
Cell[4898, 143, 160, 4, 59, "Subtitle"],
Cell[5061, 149, 191, 3, 34, "Text"],
Cell[5255, 154, 502, 13, 52, "Input"],
Cell[5760, 169, 562, 8, 57, "Text"],
Cell[CellGroupData[{
Cell[6347, 181, 282, 6, 72, "Input"],
Cell[6632, 189, 139, 3, 30, "Output"],
Cell[6774, 194, 141, 3, 30, "Output"],
Cell[6918, 199, 196, 6, 47, "Output"]
}, Open  ]],
Cell[7129, 208, 684, 20, 57, "Text"],
Cell[7816, 230, 274, 7, 31, "Input"],
Cell[8093, 239, 194, 3, 34, "Text"],
Cell[8290, 244, 278, 6, 52, "Input"],
Cell[8571, 252, 742, 18, 57, "Text"],
Cell[9316, 272, 349, 9, 72, "Input"],
Cell[9668, 283, 304, 5, 33, "Text"],
Cell[9975, 290, 196, 4, 31, "Input"],
Cell[10174, 296, 472, 12, 33, "Text"],
Cell[10649, 310, 286, 6, 31, "Input"],
Cell[10938, 318, 615, 17, 55, "Text"],
Cell[11556, 337, 127, 2, 31, "Input"],
Cell[11686, 341, 196, 3, 33, "Text"],
Cell[CellGroupData[{
Cell[11907, 348, 388, 12, 31, "Input"],
Cell[12298, 362, 99, 1, 30, "Output"]
}, Open  ]],
Cell[12412, 366, 810, 26, 55, "Text"],
Cell[13225, 394, 124, 2, 31, "Input"],
Cell[13352, 398, 147, 3, 31, "Input"],
Cell[13502, 403, 437, 15, 34, "Text"],
Cell[13942, 420, 120, 2, 31, "Input"],
Cell[14065, 424, 173, 4, 31, "Input"],
Cell[14241, 430, 197, 5, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14475, 440, 140, 2, 59, "Subtitle"],
Cell[14618, 444, 259, 9, 33, "Text"],
Cell[14880, 455, 407, 11, 72, "Input"],
Cell[15290, 468, 229, 3, 34, "Text"],
Cell[15522, 473, 542, 17, 31, "Input"],
Cell[16067, 492, 274, 4, 33, "Text"],
Cell[16344, 498, 357, 10, 31, "Input"],
Cell[16704, 510, 311, 5, 33, "Text"],
Cell[17018, 517, 305, 9, 55, "Input"],
Cell[17326, 528, 325, 5, 33, "Text"],
Cell[17654, 535, 145, 3, 31, "Input"],
Cell[17802, 540, 137, 2, 33, "Text"],
Cell[17942, 544, 119, 2, 31, "Input"],
Cell[18064, 548, 351, 10, 33, "Text"],
Cell[18418, 560, 115, 2, 31, "Input"],
Cell[18536, 564, 396, 10, 33, "Text"],
Cell[18935, 576, 149, 3, 31, "Input"],
Cell[19087, 581, 173, 4, 31, "Input"],
Cell[19263, 587, 171, 4, 31, "Input"],
Cell[19437, 593, 258, 7, 31, "Input"],
Cell[19698, 602, 205, 3, 33, "Text"],
Cell[CellGroupData[{
Cell[19928, 609, 273, 7, 31, "Input"],
Cell[20204, 618, 401, 14, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
