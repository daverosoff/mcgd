(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     18835,        575]
NotebookOptionsPosition[     17044,        515]
NotebookOutlinePosition[     17387,        530]
CellTagsIndexPosition[     17344,        527]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " for arclength of parametrized curves"
}], "Title",
 CellFrame->{{0, 0}, {2, 0}},
 CellChangeTimes->{{3.556414985906515*^9, 3.556414992536047*^9}}],

Cell[TextData[{
 "This exercise assumes you have completed the introductory worksheets ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 StyleBox["for New Users",
  FontSlant->"Italic"],
 " and ",
 StyleBox["Integrating with Mathematica",
  FontSlant->"Italic"],
 ". If not, you might want to do those before you begin the exercises here."
}], "Text",
 CellChangeTimes->{{3.5564150006162777`*^9, 3.556415032906*^9}, {
  3.5564460297564735`*^9, 3.5564460489735794`*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell["Derivatives", "Subtitle",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.556415039036368*^9, 3.556415051125516*^9}, {
  3.556415083976799*^9, 3.5564151062052317`*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can differentiate expressions and user-defined functions using the \
derivative operator D. Move the mouse pointer (or use the arrow keys) to get \
the cursor into these cells and hit Shift+Enter to evaluate them."
}], "Text",
 CellChangeTimes->{{3.5564151225533524`*^9, 3.556415139088928*^9}, {
  3.5564153818328447`*^9, 3.5564153873394327`*^9}, {3.556446061499014*^9, 
  3.5564460905742455`*^9}},
 FontSize->16],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "t_", "]"}], ":=", 
  RowBox[{"5", "*", 
   RowBox[{"Cos", "[", "t", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "t_", "]"}], ":=", 
  RowBox[{"2", "*", 
   RowBox[{"Sin", "[", "t", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.5564151536589546`*^9, 3.5564151788211093`*^9}}],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"f", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.5564151813950434`*^9, 3.5564151873852897`*^9}}],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"g", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.55641519126959*^9, 3.556415221064826*^9}}],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"t", "^", "3"}], ",", "t", ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.5564152234671645`*^9, 3.5564152289270244`*^9}}],

Cell["\<\
As you can see, multiple derivatives are easy. You can even use primes if \
there\[CloseCurlyQuote]s no chance for confusion.\
\>", "Text",
 CellChangeTimes->{{3.556415198320609*^9, 3.5564152120326576`*^9}, {
  3.556415243887141*^9, 3.5564152602355213`*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.556415261889058*^9, 3.5564152630278144`*^9}}],

Cell[TextData[{
 StyleBox["But if there is more than one variable defined in the function, ",
  FontSize->16],
 StyleBox["Mathematica",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" won\[CloseCurlyQuote]t know how to interpret the prime.",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.556415310824376*^9, 3.55641533255434*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], " ", 
    RowBox[{"y", "^", "2"}]}], " ", "-", " ", 
   RowBox[{"2", "x"}], " ", "-", " ", 
   RowBox[{"2", "y"}]}]}]], "Input",
 CellChangeTimes->{{3.5564152741033883`*^9, 3.5564152870508904`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "'"}], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.5564152893908005`*^9, 3.5564152911379333`*^9}}],

Cell[TextData[StyleBox["You can also use the palette interface to \
differentiate. I leave it to you to investigate. ",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.5564153530051537`*^9, 3.5564153740955424`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Repeated computation: functions are your friends\
\>", "Subtitle",
 CellFrame->{{0, 0}, {0, 3}},
 CellChangeTimes->{{3.55641539885179*^9, 3.5564154371327176`*^9}}],

Cell[TextData[{
 StyleBox["If you need to perform the same kind of computation with many \
different inputs (like, say, during a WeBWorK assignment involving arc \
lengths of parametrized curves), it\[CloseCurlyQuote]s often easy to set up a \
template to perform the calculation. Rather than set up a separate integral \
for each calculation, we\[CloseCurlyQuote]ll set up a function that lets us \
modify the inputs to the arc length formula: namely, ",
  FontSize->16],
 StyleBox["x(t)",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontSize->16],
 StyleBox["y(t)",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[", together with the",
  FontSize->16],
 StyleBox[" t",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox["-interval.",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.5564154457279873`*^9, 3.5564155376708508`*^9}, {
   3.5564156724067264`*^9, 3.5564156777106924`*^9}, 3.556444891691874*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "[", "t_", "]"}], ":=", 
  RowBox[{"Cos", "[", "t", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "[", "t_", "]"}], ":=", 
  RowBox[{"Sin", "[", "t", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"a", ":=", "0"}], "\[IndentingNewLine]", 
 RowBox[{"b", ":=", 
  RowBox[{"2", "*", "Pi"}]}]}], "Input",
 CellChangeTimes->{{3.556415542194677*^9, 3.556415556702268*^9}, {
  3.556415685729041*^9, 3.5564156925461974`*^9}}],

Cell[TextData[{
 StyleBox["That cell set up our parametric equations and the endpoints of our",
  FontSize->16],
 StyleBox[" t",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox["-interval. If you want to find arc length of some other \
parametrically described curve, just change the definitions of ",
  FontSize->16],
 StyleBox["x(t)",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontSize->16],
 StyleBox["y(t)",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" (remember to evaluate the cell after using Shift+Enter), and \
rerun the rest of the calculation.",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.556415561928235*^9, 3.5564156669935613`*^9}, {
  3.556444864854944*^9, 3.5564448901013064`*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   TagBox[
    FrameBox["lower"],
    "Placeholder"], 
   TagBox[
    FrameBox["upper"],
    "Placeholder"]], 
  RowBox[{
   TagBox[
    FrameBox["expr"],
    "SelectionPlaceholder"], 
   RowBox[{"\[DifferentialD]", 
    TagBox[
     FrameBox["var"],
     "Placeholder"]}]}]}]], "Input",
 CellChangeTimes->{{3.556415718816429*^9, 3.5564157287847652`*^9}, {
  3.5564157601873636`*^9, 3.5564157659905267`*^9}, {3.556415806472267*^9, 
  3.556415851556978*^9}, {3.5564449057107*^9, 3.556444913757101*^9}}],

Cell[TextData[StyleBox["In the input cell above, click \
\[OpenCurlyDoubleQuote]expr\[CloseCurlyDoubleQuote] and fill in the \
integrand, referring to the arc length formula if you need to. Note that you \
can use the Tab key to move from one blank to another without taking your \
hands off the keyboard. Fill in the lower and upper limits of integration and \
the variable of integration in the same way. Then hit Shift+Enter to \
evaluate. What is the interpretation of the answer you get? (Hint: what curve \
did we just parametrize? What is the length of this curve from school \
geometry?)",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.5564157332307367`*^9, 3.5564158034926863`*^9}, {
  3.556415858888975*^9, 3.556415884177575*^9}, {3.5564449574353347`*^9, 
  3.5564449717816305`*^9}}],

Cell[TextData[StyleBox["Remember that you can summon symbols like the \
definite integral above with the Basic Math Assistant palette (Advanced tab) \
available in the Palettes menu. You can also do a definite or indefinite \
integral without using the palette:",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.556444936336923*^9, 3.55644499648221*^9}, {
  3.5564450860062156`*^9, 3.5564450984344745`*^9}}],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"F", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5564451009918575`*^9, 3.5564451235149794`*^9}}],

Cell[TextData[{
 StyleBox["integrates the function ",
  FontSize->16],
 StyleBox["F(t)",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" over the interval [",
  FontSize->16],
 StyleBox["c,d",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox["]. Recall the color-coding: if you haven\[CloseCurlyQuote]t \
assigned a meaning to ",
  FontSize->16],
 StyleBox["F",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[", it appears in blue (as do ",
  FontSize->16],
 StyleBox["c",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontSize->16],
 StyleBox["d",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox["). The variable of integration appears as light blue so that it is \
picked out from the other variables.",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.5564451324369783`*^9, 3.5564451942358575`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["WeBWorK", "Subtitle",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.556445214981065*^9, 3.556445259263503*^9}}],

Cell[TextData[{
 StyleBox["If you like, you are free to use ",
  FontSize->16],
 StyleBox["Mathematica",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" to evaluate integrals in this class. If you do, I\
\[CloseCurlyQuote]d like you to save your work in a portfolio, so that you \
can refer to the examples you create later. With software packages as large \
as ",
  FontSize->16],
 StyleBox["Mathematica",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" (several million lines of C and modified C code) hardly anyone \
knows how to use all of the capabilities of the program. The way to \
proficiency is to build up a large catalog of examples. For now, copy and \
paste two cells from this notebook into a new notebook (which you\
\[CloseCurlyQuote]ll have to open). These cells are the ones above holding \
the equations defining the functions f(t) and g(t) and the endpoints a and b \
(that\[CloseCurlyQuote]s all one cell), and the one just below that holding \
the integral. See the nested brackets on the right side of this window? Those \
are cell delineators. If you right-click on one, you can easily select a \
cell. Notice how the mouse pointer changes when you are over a delineator. If \
you paste just those two cells into a new notebook, you can use them to solve \
a WeBWorK problem. Paste another copy and solve another (instead of reusing \
the same one). That way you have a record of what you did to get the answers. \
",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.5564452637089043`*^9, 3.556445331029441*^9}, {
  3.556445427422138*^9, 3.5564456246762867`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting", "Subtitle",
 CellFrame->{{0, 0}, {0, 3}},
 CellChangeTimes->{{3.556415892258375*^9, 3.556415902679175*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" is very good at plotting all kind of mathematical objects. Enter \
your favorite parametric equations in the cell below (replacing the 1s on the \
right), choose a ",
  FontSize->16],
 StyleBox["t",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox["-range and evaluate:",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.556415905845975*^9, 3.556415936125575*^9}, {
  3.556415975031975*^9, 3.556416004749975*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y", ",", "a", ",", "b"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "[", "t_", "]"}], ":=", "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "[", "t_", "]"}], ":=", "1"}], "\[IndentingNewLine]", 
 RowBox[{"a", ":=", " ", "0"}], "\[IndentingNewLine]", 
 RowBox[{"b", ":=", "10"}]}], "Input",
 CellChangeTimes->{{3.556415938824375*^9, 3.556415971802775*^9}, {
   3.5564160102879753`*^9, 3.5564160195231752`*^9}, 3.5564448506178045`*^9}],

Cell[TextData[{
 StyleBox["To create a parametric plot, we\[CloseCurlyQuote]ll use the \
command ParametricPlot. It won\[CloseCurlyQuote]t be very interesting until \
you change the definitions of ",
  FontSize->16],
 StyleBox["x",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontSize->16],
 StyleBox["y",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" above and reevaluate.",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.556416030255975*^9, 3.556416081002775*^9}}],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", 
     RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "a", ",", "b"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<OurPlot\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.556415993096775*^9, 3.556415993814375*^9}, {
  3.5564160252327747`*^9, 3.5564160581175747`*^9}, {3.556416096165975*^9, 
  3.5564161318275747`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction to Manipulate", "Subtitle",
 CellFrame->{{0, 0}, {0, 3}},
 CellChangeTimes->{{3.556416160749975*^9, 3.5564161649775753`*^9}}],

Cell[TextData[{
 StyleBox["Manipulate[] is one of the coolest commands in ",
  FontSize->16],
 StyleBox["Mathematica",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[". It assembles a collection of stills into an animation.",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.556416173963175*^9, 3.5564162100927753`*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "*", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{"a", "*", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.556416211247175*^9, 3.556416294987368*^9}}],

Cell[TextData[StyleBox["Notice that Manipulate[] takes two arguments: the \
first is the ParametricPlot and the second is the list {a,0,2}. Now a is a \
variable inside the ParametricPlot argument: it\[CloseCurlyQuote]s the radius \
of the circle being plotted. Manipulate creates all the circles with radii \
between 0 and 2 and lets you use the slider to move between them.",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.55641632425203*^9, 3.5564163843257046`*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], ",", 
       RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "a", "]"}], ",", 
           RowBox[{"Sin", "[", "a", "]"}]}], "}"}], "]"}]}], "}"}]}]}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.556416386494035*^9, 3.556416444836165*^9}}],

Cell[TextData[{
 StyleBox["In this animation, the curve being plotted \
doesn\[CloseCurlyQuote]t change. This is because the Manipulate variable ",
  FontSize->16],
 StyleBox["a",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" doesn\[CloseCurlyQuote]t have to do with the curve. The Epilog \
option tells ParametricPlot to print more stuff after it\[CloseCurlyQuote]s \
done with the circle: namely, a point of size 0.02 at location (cos(",
  FontSize->16],
 StyleBox["a",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox["), sin(",
  FontSize->16],
 StyleBox["a",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[")). When you move the slider, the value of ",
  FontSize->16],
 StyleBox["a",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[" changes, and the point moves along the circle.",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.5564164598584833`*^9, 3.556416543113015*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{732, 505},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 214, 6, 147, "Title"],
Cell[796, 30, 493, 14, 77, "Text"],
Cell[CellGroupData[{
Cell[1314, 48, 180, 3, 57, "Subtitle"],
Cell[1497, 53, 481, 10, 77, "Text"],
Cell[1981, 65, 339, 9, 52, "Input"],
Cell[2323, 76, 176, 4, 31, "Input"],
Cell[2502, 82, 171, 4, 31, "Input"],
Cell[2676, 88, 181, 4, 31, "Input"],
Cell[2860, 94, 283, 6, 55, "Text"],
Cell[3146, 102, 140, 3, 31, "Input"],
Cell[3289, 107, 338, 9, 55, "Text"],
Cell[3630, 118, 339, 10, 31, "Input"],
Cell[3972, 130, 165, 4, 31, "Input"],
Cell[4140, 136, 214, 3, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4391, 144, 173, 4, 60, "Subtitle"],
Cell[4567, 150, 928, 25, 121, "Text"],
Cell[5498, 177, 464, 11, 92, "Input"],
Cell[5965, 190, 731, 22, 77, "Text"],
Cell[6699, 214, 561, 19, 55, "Input"],
Cell[7263, 235, 794, 12, 121, "Text"],
Cell[8060, 249, 406, 6, 77, "Text"],
Cell[8469, 257, 243, 6, 31, "Input"],
Cell[8715, 265, 828, 31, 77, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9580, 301, 123, 2, 59, "Subtitle"],
Cell[9706, 305, 1597, 31, 275, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11340, 341, 124, 2, 60, "Subtitle"],
Cell[11467, 345, 508, 15, 77, "Text"],
Cell[11978, 362, 515, 10, 112, "Input"],
Cell[12496, 374, 492, 16, 55, "Text"],
Cell[12991, 392, 612, 15, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13640, 412, 144, 2, 60, "Subtitle"],
Cell[13787, 416, 324, 9, 55, "Text"],
Cell[14114, 427, 680, 20, 52, "Input"],
Cell[14797, 449, 469, 6, 99, "Text"],
Cell[15269, 457, 848, 25, 52, "Input"],
Cell[16120, 484, 896, 27, 99, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
